<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Properties configuration -->
    <bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertySourcesPlaceholderConfigurer"
          lazy-init="false">
        <!--
         | Supports encrypted properties within the location(s) listed in this
         | bean.  The password is the environment variable "UP_JASYPT_KEY"
         | (see http://www.jasypt.org/).
         +-->
        <constructor-arg>
            <bean class="org.jasig.portlet.newsreader.spring.StringEncryptorFactoryBean"/>
        </constructor-arg>
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
                <value>classpath:configuration.properties</value>
                <!--
                 | The following optional files allow deployers to set or override most
                 | configuration settings in a manner that is outside the footprint of the
                 | build/deploy cycle and SCM.
                 |
                 | Reasons for choosing that may include:
                 |   - Desire to keep sensitive information out of your Git repository
                 |   - Ability to change some common settings without a full build and deploy cycle
                 |   - Building a WAR/EAR that is environment-independent
                 |
                 | Any property defined in the above files that is referenced in the Spring context
                 | may be overridden in one (or both) of these files.  Later files override earlier
                 | files.
                 |
                 | The conventional location of ${portal.home} is ${catalina.base}/portal;  but you
                 | can (typically) override that location using a PORTAL_HOME environment variable.
                 | (Ultimately it depends on your setenv.sh or setenv.bat file.)
                 |
                 | The first file (global.properties) may contain properties that are shared with
                 | other modules (e.g. portlets) in Tomcat.  Several Apereo portlets source
                 | global.properties automatically.  The second file (announcements.properties) is
                 | (should be) sourced by this module exclusively.
                 +-->
                <value>file:${portal.home}/global.properties</value>
                <value>file:${portal.home}/news-reader.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <!-- HIBERNATE CONFIGURATION -->

    <bean id="newsStore" parent="abstractStoreTransactionProxy">
        <property name="target" ref="newsStoreTarget"/>
    </bean>

    <bean id="newsStoreTarget"
          class="org.jasig.portlet.newsreader.dao.HibernateNewsStore"
          p:sessionFactory-ref="sessionFactory"
          autowire-candidate="false"/>

    <bean id="abstractStoreTransactionProxy"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
          abstract="true">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
                <prop key="store*">PROPAGATION_REQUIRED</prop>
                <prop key="remove*">PROPAGATION_REQUIRED</prop>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:hibernate.cfg.xml">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource"
          class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close"
          p:driverClassName="${hibernate.connection.driver_class}"
          p:url="${hibernate.connection.url}"
          p:username="${hibernate.connection.username}"
          p:password="${hibernate.connection.password}"
          p:validationQuery="${hibernate.connection.validationQuery}"
          p:validationQueryTimeout="7"
          p:initialSize="5"
          p:maxActive="50"
          p:maxIdle="15"
          p:minIdle="2"

          p:maxWait="10000"
          p:testOnBorrow="true"
          p:testWhileIdle="true"
          p:minEvictableIdleTimeMillis="60000"
          p:timeBetweenEvictionRunsMillis="10000"
          p:removeAbandoned="true"
          p:removeAbandonedTimeout="120"
          p:logAbandoned="true"
          p:numTestsPerEvictionRun="5"
          p:jdbcInterceptors="ConnectionState(useEquals=true);StatementFinalizer(trace=true);ResetAbandonedTimer;SlowQueryReport"
    />

</beans>
